name: Deploy

on:
  workflow_call:
    inputs:
      cluster-prefix:
        description: The ECS prefix of the cluster to target for deployment.
        required: true
        type: string
      environment:
        description: The environment to target for deployment.
        required: true
        type: string
      service-name:
        description: The name of the service being deployed, defaults to repository name.
        required: false
        default: ${{ github.event.repository.name }}
        type: string
    secrets:
      ecr-username:
        description: The username to access the elastic container registry.
        required: true
      ecr-password:
        description: The username to access the elastic container registry.
        required: true

jobs :
  deploy:
    name: Deploy to ${{ inputs.cluster-prefix }} ${{ inputs.environment }}
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create task definition
        run: sed -e 's/${environment}/${{ inputs.environment }}/g' -e 's/${service-name}/${{ inputs.service-name }}/g' .aws/task-definition-template.json > ${{ runner.temp }}/task-definition.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ecr-username }}
          aws-secret-access-key: ${{ secrets.ecr-password }}
          aws-region: eu-west-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ runner.temp }}/task-definition.json
          container-name: ${{ inputs.service-name }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ inputs.service-name }}
          cluster: ${{ inputs.cluster-prefix }}-${{ inputs.environment }}
          wait-for-service-stability: true
