name: PR Analysis

permissions:
  pull-requests: write
  contents: read

on:
  workflow_call:
    secrets:
      checkout-token:
        description: The token used for performing checkout.
        required: false
      codeartifact-username:
        description: The username to access the codeartifact repository.
        required: false
      codeartifact-password:
        description: The password to access the codeartifact repository.
        required: false
      sonar-token:
        description: A token allowing access to SonarCloud.
        required: true

jobs:
  validate-wrapper:
    name: Validate Gradle wrapper
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1.0.6

  analyse:
    name: Analyse PR
    needs: validate-wrapper
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout for determining submodules
        uses: actions/checkout@v3

      - name: Determine Submodules
        id: check-submodules
        run: |
          if [ -f .gitmodules ]; then
            echo "has_submodules=recursive" >> $GITHUB_OUTPUT
          else
            echo "has_submodules=false" >> $GITHUB_OUTPUT
          fi

      - name: Display Submodule Status
        run: |
          echo "Has submodules:" ${{ steps.check-submodules.outputs.has_submodules }}

      - name: Checkout
        uses: actions/checkout@v3

        with:
          fetch-depth: 0
          remote: true
#          submodules: ${{ steps.check-submodules.outputs.has_submodules }}
#          repo-token: ${{ secrets.GITHUB_TOKEN }}
          #run: git submodule update --init --recursive
          submodules: ${{ steps.check-submodules.outputs.has_submodules }}
          token: ${{ secrets.checkout-token }}
#      - name: Configure Git
#        run: |
#          git config user.name "jayanta2018"
#          git config user.email "jayanta.saha@hee.nhs.uk"
#
#      - name: Initialize submodules
#        run: git submodule init
#
#      - name: Update submodules
#        run: git submodule update --remote

#      - name: Set up Git credentials
#        run: git config --global credential.helper store
#
#      - name: Update submodules
#        run: |
#          git submodule update --init --recursive
#          git submodule foreach 'git pull origin main'

      - name: Set up JDK
        uses: actions/setup-java@v3.10.0
        with:
          cache: gradle
          distribution: temurin
          java-version: 17

      - name: Check for codeartifact secrets
        id: check-codeartifact-secrets
        env:
          USERNAME: ${{ secrets.codeartifact-username }}
          PASSWORD: ${{ secrets.codeartifact-password }}
        run: |
          if [[ $USERNAME != "" && $PASSWORD != "" ]]; then
            echo "do-codeartifact-login=true" >> $GITHUB_OUTPUT
          else
            echo "do-codeartifact-login=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure AWS credentials
        if: steps.check-codeartifact-secrets.outputs.do-codeartifact-login == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.codeartifact-username }}
          aws-secret-access-key: ${{ secrets.codeartifact-password }}
          aws-region: eu-west-1

      - name: Add CodeArtifact env var
        if: steps.check-codeartifact-secrets.outputs.do-codeartifact-login == 'true'
        run: |
          CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain hee --domain-owner 430723991443 --query authorizationToken --output text --duration-seconds 900`
          echo CODEARTIFACT_AUTH_TOKEN=$CODEARTIFACT_AUTH_TOKEN >> $GITHUB_ENV
          echo "::add-mask::$CODEARTIFACT_AUTH_TOKEN"

      - name: Build
        run: ./gradlew build

      - name: Get modified files
        id: changed-files
        uses: Ana06/get-changed-files@v2.2.0

      - name: Check modified files
        id: check-files
        run: |
          do_analysis=false
          for changed_file in ${{ steps.changed-files.outputs.all }}; do
            if [[ $changed_file =~ ^(.*\/|)src\/.+$ ]]; then
              do_analysis=true
              break
            fi
          done
          echo "do-analysis=$do_analysis" >> $GITHUB_OUTPUT

      - name: Notify skipped analysis
        if: steps.check-files.outputs.do-analysis == 'false'
        uses: mshick/add-pr-comment@v2
        with:
          allow-repeats: true
          repo-token: ${{ github.token }}
          message: |
            Quality analysis was skipped as no source changes were detected.

      - name: Analyse quality
        if: steps.check-files.outputs.do-analysis == 'true'
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.sonar-token }}
        run: ./gradlew sonarqube
